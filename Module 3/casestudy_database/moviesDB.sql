use movietheter;

CREATE TABLE ROLES (
ROLE_ID VARCHAR(10) PRIMARY KEY ,
ROLE_NAME VARCHAR(255)
);

CREATE TABLE account (
ACCOUNT_ID VARCHAR(10) PRIMARY KEY ,
ADDRESS VARCHAR(255),
DATE_OF_BIRTH DATE,
EMAIL VARCHAR(255),
FULL_NAME VARCHAR(255),
GENDER VARCHAR(255),
IDENTITY_CARD VARCHAR(255),
IMAGE VARCHAR(255),
PASSWORD VARCHAR(255),
PHONE_NUMBER VARCHAR(255),
REGISTER_DATE DATE,
ROLE_ID VARCHAR(10) not null,
STATUS VARCHAR(1),
USERNAME VARCHAR(255)
);

CREATE TABLE EMPLOYEE (
EMPLOYEE_ID VARCHAR(10) PRIMARY KEY ,
ACCOUNT_ID VARCHAR(10),
FOREIGN KEY (ACCOUNT_ID) REFERENCES account(ACCOUNT_ID)
);

CREATE TABLE MEMBER (
MEMBER_ID VARCHAR(10) PRIMARY KEY ,
SCORE VARCHAR(10),
ACCOUNT_ID VARCHAR(10),
FOREIGN KEY (ACCOUNT_ID) REFERENCES account(ACCOUNT_ID)
);


CREATE TABLE CINEMA_ROOM (
CINEMA_ROOM_ID INT AUTO_INCREMENT PRIMARY KEY ,
CINEMA_ROOM_NAME VARCHAR(255),
SEAT_QUANTITY INT
);
CREATE TABLE SEAT (
SEAT_ID INT AUTO_INCREMENT  PRIMARY KEY ,
CINEMA_ROOM_ID VARCHAR(10),
SEAT_COLUMN VARCHAR(255),
SEAT_ROW VARCHAR(10),
SEAT_STATUS TINYINT,
SEAT_TYPE TINYINT,
FOREIGN KEY (CINEMA_ROOM_ID) REFERENCES CINEMA_ROOM(CINEMA_ROOM_ID)
);

CREATE TABLE TYPE (
TYPE_ID INT AUTO_INCREMENT PRIMARY KEY ,
TYPE_NAME VARCHAR(255)
);

CREATE TABLE SCHEDULE (
SCHEDULE_ID INT AUTO_INCREMENT PRIMARY KEY ,
SCHEDULE_TIME VARCHAR(255)
);


CREATE TABLE MOVIE (
MOVIE_ID INT AUTO_INCREMENT PRIMARY KEY ,
ACTOR VARCHAR(255),
CINEMA_ROOM_ID VARCHAR(10),
CONTENT VARCHAR(1000),
DIRECTOR VARCHAR(255),
DURATION VARCHAR(10),
FROM_DATE DATE,
MOVIE_PRODUCTION_COMPANY VARCHAR(255),
TO_DATE DATE,
VERSION VARCHAR(255),
MOVIE_NAME_ENGLISH VARCHAR(255),
MOVIE_NAME_VN VARCHAR(255) ,
LARGE_IMAGE VARCHAR(255),
SMALL_IMAGE VARCHAR(255)
);


CREATE TABLE MOVIE_SCHEDULE (
MOVIE_ID INT   ,
SCHEDULE_ID INT ,
FOREIGN KEY (MOVIE_ID) REFERENCES  MOVIE(MOVIE_ID),
FOREIGN KEY (SCHEDULE_ID) REFERENCES  SCHEDULE(SCHEDULE_ID)
);

CREATE TABLE SHOW_DATES (
SHOW_DATE_ID INT AUTO_INCREMENT PRIMARY KEY ,
SHOW_DATE DATE,
DATE_NAME VARCHAR(255)
);

CREATE TABLE MOVIE_DATE (
MOVIE_ID INT  ,
SHOW_DATE_ID INT,
FOREIGN KEY (MOVIE_ID) REFERENCES  MOVIE(MOVIE_ID),
FOREIGN KEY (SHOW_DATE_ID) REFERENCES  SHOW_DATES(SHOW_DATE_ID)
);

CREATE TABLE MOVIE_TYPE (
MOVIE_ID INT ,
TYPE_ID INT ,
FOREIGN KEY (MOVIE_ID) REFERENCES  MOVIE(MOVIE_ID),
FOREIGN KEY (TYPE_ID) REFERENCES  TYPE(TYPE_ID)
);

CREATE TABLE PROMOTION (
PROMOTION_ID INT AUTO_INCREMENT PRIMARY KEY,
DETAIL VARCHAR(255),
DISCOUNT_LEVEL INT,
END_TIME DATE,
IMAGE VARCHAR(255),
START_TIME DATE,
TITLE  VARCHAR(255)
);

CREATE TABLE INVOICE (
INVOICE_ID INT AUTO_INCREMENT PRIMARY KEY ,
ACCOUNT_ID VARCHAR(10),
ADD_SCORE INT,
BOOKING_DATE DATE,
MOVIE_NAME VARCHAR(255),
SCHEDULE_SHOW DATE,
SCHEDULE_SHOW_TIME VARCHAR(255),
STATUS TINYINT,
TOTAL_MONEY INT,
USE_SCORE INT,
SEAT VARCHAR(255),
FOREIGN KEY (ACCOUNT_ID) REFERENCES  ACCOUNT(ACCOUNT_ID)
);

CREATE TABLE ACCOUNT_ROLE (
ACCOUNT_ROLE_ID INT AUTO_INCREMENT PRIMARY KEY,
ACCOUNT_ID VARCHAR(10),
ROLE_ID VARCHAR(10),
FOREIGN KEY (ACCOUNT_ID) REFERENCES  account(ACCOUNT_ID),
FOREIGN KEY (ROLE_ID) REFERENCES  ROLES(ROLE_ID)
)